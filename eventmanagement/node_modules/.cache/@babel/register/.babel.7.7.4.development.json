{
  "{\"sourceRoot\":\"D:\\\\TestProjects\\\\separatecqrsprojects\\\\message-command\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\TestProjects\\\\separatecqrsprojects\",\"filename\":\"D:\\\\TestProjects\\\\separatecqrsprojects\\\\message-command\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\TestProjects\\\\separatecqrsprojects\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\message-command",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\TestProjects\\separatecqrsprojects",
      "filename": "D:\\TestProjects\\separatecqrsprojects\\message-command\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\TestProjects\\separatecqrsprojects",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\TestProjects\\separatecqrsprojects\\message-command\\index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\TestProjects\\separatecqrsprojects\\message-command\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\message-command",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar uuid = require('uuid');\n\nvar Hapi = require('@hapi/hapi');\n\nvar _process$env = process.env,\n    RABBITMQ_HOST = _process$env.RABBITMQ_HOST,\n    RABBITMQ_PORT = _process$env.RABBITMQ_PORT,\n    RABBITMQ_URL = _process$env.RABBITMQ_URL,\n    MESSAGE_COMMAND_PORT = _process$env.MESSAGE_COMMAND_PORT,\n    PORT = _process$env.PORT;\n/**\r\n * rabbitmq\r\n */\n\nvar events = {\n  create: 'messages.create'\n};\nvar rabbitHost = RABBITMQ_HOST || '127.0.0.1';\nvar rabbitPort = RABBITMQ_PORT || '5672';\nvar rabbitUrl = RABBITMQ_URL || \"amqp://\".concat(rabbitHost, \":\").concat(rabbitPort);\n\nvar bus = require('servicebus').bus({\n  url: rabbitUrl\n}); //console.log(\"rabbitUrl\", rabbitUrl);\n\n\nvar init = function init() {\n  var server;\n  return regeneratorRuntime.async(function init$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          server = Hapi.server({\n            port: 3000,\n            host: 'localhost'\n          });\n          _context.next = 3;\n          return regeneratorRuntime.awrap(server.start());\n\n        case 3:\n          console.log('Message command server running on %s', server.info.uri);\n          server.route({\n            method: 'POST',\n            path: '/api/v1/messages',\n            handler: function handler(request, h) {\n              var payload = request.payload;\n              var id = uuid.v4();\n              var message = payload;\n              return new Promise(function (resolve, reject) {\n                try {\n                  bus.send(events.create, {\n                    id: id,\n                    message: message\n                  });\n                  console.log(\"Event id -\", id);\n                  resolve(h.response({\n                    Message: \"Event id - \".concat(id)\n                  }));\n                } catch (err) {\n                  reject(err);\n                }\n              });\n            }\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nprocess.on('unhandledRejection', function (err) {\n  console.log(err);\n  process.exit(1);\n});\ninit();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV1aWQiLCJyZXF1aXJlIiwiSGFwaSIsInByb2Nlc3MiLCJlbnYiLCJSQUJCSVRNUV9IT1NUIiwiUkFCQklUTVFfUE9SVCIsIlJBQkJJVE1RX1VSTCIsIk1FU1NBR0VfQ09NTUFORF9QT1JUIiwiUE9SVCIsImV2ZW50cyIsImNyZWF0ZSIsInJhYmJpdEhvc3QiLCJyYWJiaXRQb3J0IiwicmFiYml0VXJsIiwiYnVzIiwidXJsIiwiaW5pdCIsInNlcnZlciIsInBvcnQiLCJob3N0Iiwic3RhcnQiLCJjb25zb2xlIiwibG9nIiwiaW5mbyIsInVyaSIsInJvdXRlIiwibWV0aG9kIiwicGF0aCIsImhhbmRsZXIiLCJyZXF1ZXN0IiwiaCIsInBheWxvYWQiLCJpZCIsInY0IiwibWVzc2FnZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwic2VuZCIsInJlc3BvbnNlIiwiTWVzc2FnZSIsImVyciIsIm9uIiwiZXhpdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxZQUFELENBQXBCOzttQkFRSUUsT0FBTyxDQUFDQyxHO0lBTFJDLGEsZ0JBQUFBLGE7SUFDQUMsYSxnQkFBQUEsYTtJQUNBQyxZLGdCQUFBQSxZO0lBQ0FDLG9CLGdCQUFBQSxvQjtJQUNBQyxJLGdCQUFBQSxJO0FBRUo7Ozs7QUFHQSxJQUFNQyxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsTUFBTSxFQUFFO0FBREcsQ0FBZjtBQUdBLElBQU1DLFVBQVUsR0FBR1AsYUFBYSxJQUFJLFdBQXBDO0FBQ0EsSUFBTVEsVUFBVSxHQUFHUCxhQUFhLElBQUksTUFBcEM7QUFDQSxJQUFNUSxTQUFTLEdBQUdQLFlBQVkscUJBQWNLLFVBQWQsY0FBNEJDLFVBQTVCLENBQTlCOztBQUNBLElBQU1FLEdBQUcsR0FBR2QsT0FBTyxDQUFDLFlBQUQsQ0FBUCxDQUFzQmMsR0FBdEIsQ0FBMEI7QUFBRUMsRUFBQUEsR0FBRyxFQUFFRjtBQUFQLENBQTFCLENBQVosQyxDQUNBOzs7QUFFQSxJQUFNRyxJQUFJLEdBQUcsU0FBUEEsSUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFSEMsVUFBQUEsTUFGRyxHQUVNaEIsSUFBSSxDQUFDZ0IsTUFBTCxDQUFZO0FBQ3ZCQyxZQUFBQSxJQUFJLEVBQUUsSUFEaUI7QUFFdkJDLFlBQUFBLElBQUksRUFBRTtBQUZpQixXQUFaLENBRk47QUFBQTtBQUFBLDBDQU9IRixNQUFNLENBQUNHLEtBQVAsRUFQRzs7QUFBQTtBQVFUQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvREwsTUFBTSxDQUFDTSxJQUFQLENBQVlDLEdBQWhFO0FBRUFQLFVBQUFBLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhO0FBQ1RDLFlBQUFBLE1BQU0sRUFBRSxNQURDO0FBRVRDLFlBQUFBLElBQUksRUFBRSxrQkFGRztBQUdUQyxZQUFBQSxPQUFPLEVBQUUsaUJBQVVDLE9BQVYsRUFBbUJDLENBQW5CLEVBQXNCO0FBRTNCLGtCQUFNQyxPQUFPLEdBQUdGLE9BQU8sQ0FBQ0UsT0FBeEI7QUFDQSxrQkFBTUMsRUFBRSxHQUFHakMsSUFBSSxDQUFDa0MsRUFBTCxFQUFYO0FBQ0Esa0JBQU1DLE9BQU8sR0FBR0gsT0FBaEI7QUFDQSxxQkFBTyxJQUFJSSxPQUFKLENBQVksVUFBVUMsT0FBVixFQUFtQkMsTUFBbkIsRUFBMkI7QUFDMUMsb0JBQUk7QUFDQXZCLGtCQUFBQSxHQUFHLENBQUN3QixJQUFKLENBQVM3QixNQUFNLENBQUNDLE1BQWhCLEVBQXdCO0FBQUVzQixvQkFBQUEsRUFBRSxFQUFGQSxFQUFGO0FBQU1FLG9CQUFBQSxPQUFPLEVBQVBBO0FBQU4sbUJBQXhCO0FBQ0FiLGtCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaLEVBQTBCVSxFQUExQjtBQUNBSSxrQkFBQUEsT0FBTyxDQUFDTixDQUFDLENBQUNTLFFBQUYsQ0FBVztBQUFFQyxvQkFBQUEsT0FBTyx1QkFBZ0JSLEVBQWhCO0FBQVQsbUJBQVgsQ0FBRCxDQUFQO0FBQ0gsaUJBSkQsQ0FLQSxPQUFPUyxHQUFQLEVBQVk7QUFDUkosa0JBQUFBLE1BQU0sQ0FBQ0ksR0FBRCxDQUFOO0FBQ0g7QUFDSixlQVRNLENBQVA7QUFVSDtBQWxCUSxXQUFiOztBQVZTO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQWI7O0FBZ0NBdkMsT0FBTyxDQUFDd0MsRUFBUixDQUFXLG9CQUFYLEVBQWlDLFVBQUNELEdBQUQsRUFBUztBQUV0Q3BCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZbUIsR0FBWjtBQUNBdkMsRUFBQUEsT0FBTyxDQUFDeUMsSUFBUixDQUFhLENBQWI7QUFDSCxDQUpEO0FBTUEzQixJQUFJIiwic291cmNlUm9vdCI6IkQ6XFxUZXN0UHJvamVjdHNcXHNlcGFyYXRlY3Fyc3Byb2plY3RzXFxtZXNzYWdlLWNvbW1hbmQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHV1aWQgPSByZXF1aXJlKCd1dWlkJyk7XHJcbmNvbnN0IEhhcGkgPSByZXF1aXJlKCdAaGFwaS9oYXBpJyk7XHJcblxyXG5jb25zdCB7XHJcbiAgICBSQUJCSVRNUV9IT1NULFxyXG4gICAgUkFCQklUTVFfUE9SVCxcclxuICAgIFJBQkJJVE1RX1VSTCxcclxuICAgIE1FU1NBR0VfQ09NTUFORF9QT1JULFxyXG4gICAgUE9SVCxcclxufSA9IHByb2Nlc3MuZW52O1xyXG4vKipcclxuICogcmFiYml0bXFcclxuICovXHJcbmNvbnN0IGV2ZW50cyA9IHtcclxuICAgIGNyZWF0ZTogJ21lc3NhZ2VzLmNyZWF0ZScsXHJcbn07XHJcbmNvbnN0IHJhYmJpdEhvc3QgPSBSQUJCSVRNUV9IT1NUIHx8ICcxMjcuMC4wLjEnO1xyXG5jb25zdCByYWJiaXRQb3J0ID0gUkFCQklUTVFfUE9SVCB8fCAnNTY3Mic7XHJcbmNvbnN0IHJhYmJpdFVybCA9IFJBQkJJVE1RX1VSTCB8fCBgYW1xcDovLyR7cmFiYml0SG9zdH06JHtyYWJiaXRQb3J0fWA7XHJcbmNvbnN0IGJ1cyA9IHJlcXVpcmUoJ3NlcnZpY2VidXMnKS5idXMoeyB1cmw6IHJhYmJpdFVybCB9KTtcclxuLy9jb25zb2xlLmxvZyhcInJhYmJpdFVybFwiLCByYWJiaXRVcmwpO1xyXG5cclxuY29uc3QgaW5pdCA9IGFzeW5jICgpID0+IHtcclxuXHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBIYXBpLnNlcnZlcih7XHJcbiAgICAgICAgcG9ydDogMzAwMCxcclxuICAgICAgICBob3N0OiAnbG9jYWxob3N0J1xyXG4gICAgfSk7XHJcblxyXG4gICAgYXdhaXQgc2VydmVyLnN0YXJ0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnTWVzc2FnZSBjb21tYW5kIHNlcnZlciBydW5uaW5nIG9uICVzJywgc2VydmVyLmluZm8udXJpKTtcclxuXHJcbiAgICBzZXJ2ZXIucm91dGUoe1xyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIHBhdGg6ICcvYXBpL3YxL21lc3NhZ2VzJyxcclxuICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxdWVzdCwgaCkge1xyXG5cclxuICAgICAgICAgICAgY29uc3QgcGF5bG9hZCA9IHJlcXVlc3QucGF5bG9hZDtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSB1dWlkLnY0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBwYXlsb2FkO1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBidXMuc2VuZChldmVudHMuY3JlYXRlLCB7IGlkLCBtZXNzYWdlIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXZlbnQgaWQgLVwiLCBpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShoLnJlc3BvbnNlKHsgTWVzc2FnZTogYEV2ZW50IGlkIC0gJHtpZH1gIH0pKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbnByb2Nlc3Mub24oJ3VuaGFuZGxlZFJlamVjdGlvbicsIChlcnIpID0+IHtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgcHJvY2Vzcy5leGl0KDEpO1xyXG59KTtcclxuXHJcbmluaXQoKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "uuid",
        "require",
        "Hapi",
        "process",
        "env",
        "RABBITMQ_HOST",
        "RABBITMQ_PORT",
        "RABBITMQ_URL",
        "MESSAGE_COMMAND_PORT",
        "PORT",
        "events",
        "create",
        "rabbitHost",
        "rabbitPort",
        "rabbitUrl",
        "bus",
        "url",
        "init",
        "server",
        "port",
        "host",
        "start",
        "console",
        "log",
        "info",
        "uri",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "h",
        "payload",
        "id",
        "v4",
        "message",
        "Promise",
        "resolve",
        "reject",
        "send",
        "response",
        "Message",
        "err",
        "on",
        "exit"
      ],
      "mappings": "AAAA;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,YAAD,CAApB;;mBAQIE,OAAO,CAACC,G;IALRC,a,gBAAAA,a;IACAC,a,gBAAAA,a;IACAC,Y,gBAAAA,Y;IACAC,oB,gBAAAA,oB;IACAC,I,gBAAAA,I;AAEJ;;;;AAGA,IAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AADG,CAAf;AAGA,IAAMC,UAAU,GAAGP,aAAa,IAAI,WAApC;AACA,IAAMQ,UAAU,GAAGP,aAAa,IAAI,MAApC;AACA,IAAMQ,SAAS,GAAGP,YAAY,qBAAcK,UAAd,cAA4BC,UAA5B,CAA9B;;AACA,IAAME,GAAG,GAAGd,OAAO,CAAC,YAAD,CAAP,CAAsBc,GAAtB,CAA0B;AAAEC,EAAAA,GAAG,EAAEF;AAAP,CAA1B,CAAZ,C,CACA;;;AAEA,IAAMG,IAAI,GAAG,SAAPA,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,UAAAA,MAFG,GAEMhB,IAAI,CAACgB,MAAL,CAAY;AACvBC,YAAAA,IAAI,EAAE,IADiB;AAEvBC,YAAAA,IAAI,EAAE;AAFiB,WAAZ,CAFN;AAAA;AAAA,0CAOHF,MAAM,CAACG,KAAP,EAPG;;AAAA;AAQTC,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDL,MAAM,CAACM,IAAP,CAAYC,GAAhE;AAEAP,UAAAA,MAAM,CAACQ,KAAP,CAAa;AACTC,YAAAA,MAAM,EAAE,MADC;AAETC,YAAAA,IAAI,EAAE,kBAFG;AAGTC,YAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AAE3B,kBAAMC,OAAO,GAAGF,OAAO,CAACE,OAAxB;AACA,kBAAMC,EAAE,GAAGjC,IAAI,CAACkC,EAAL,EAAX;AACA,kBAAMC,OAAO,GAAGH,OAAhB;AACA,qBAAO,IAAII,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,oBAAI;AACAvB,kBAAAA,GAAG,CAACwB,IAAJ,CAAS7B,MAAM,CAACC,MAAhB,EAAwB;AAAEsB,oBAAAA,EAAE,EAAFA,EAAF;AAAME,oBAAAA,OAAO,EAAPA;AAAN,mBAAxB;AACAb,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,EAA1B;AACAI,kBAAAA,OAAO,CAACN,CAAC,CAACS,QAAF,CAAW;AAAEC,oBAAAA,OAAO,uBAAgBR,EAAhB;AAAT,mBAAX,CAAD,CAAP;AACH,iBAJD,CAKA,OAAOS,GAAP,EAAY;AACRJ,kBAAAA,MAAM,CAACI,GAAD,CAAN;AACH;AACJ,eATM,CAAP;AAUH;AAlBQ,WAAb;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAgCAvC,OAAO,CAACwC,EAAR,CAAW,oBAAX,EAAiC,UAACD,GAAD,EAAS;AAEtCpB,EAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACAvC,EAAAA,OAAO,CAACyC,IAAR,CAAa,CAAb;AACH,CAJD;AAMA3B,IAAI",
      "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\message-command",
      "sourcesContent": [
        "'use strict';\r\nconst uuid = require('uuid');\r\nconst Hapi = require('@hapi/hapi');\r\n\r\nconst {\r\n    RABBITMQ_HOST,\r\n    RABBITMQ_PORT,\r\n    RABBITMQ_URL,\r\n    MESSAGE_COMMAND_PORT,\r\n    PORT,\r\n} = process.env;\r\n/**\r\n * rabbitmq\r\n */\r\nconst events = {\r\n    create: 'messages.create',\r\n};\r\nconst rabbitHost = RABBITMQ_HOST || '127.0.0.1';\r\nconst rabbitPort = RABBITMQ_PORT || '5672';\r\nconst rabbitUrl = RABBITMQ_URL || `amqp://${rabbitHost}:${rabbitPort}`;\r\nconst bus = require('servicebus').bus({ url: rabbitUrl });\r\n//console.log(\"rabbitUrl\", rabbitUrl);\r\n\r\nconst init = async () => {\r\n\r\n    const server = Hapi.server({\r\n        port: 3000,\r\n        host: 'localhost'\r\n    });\r\n\r\n    await server.start();\r\n    console.log('Message command server running on %s', server.info.uri);\r\n\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/api/v1/messages',\r\n        handler: function (request, h) {\r\n\r\n            const payload = request.payload;\r\n            const id = uuid.v4();\r\n            const message = payload;\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    bus.send(events.create, { id, message });\r\n                    console.log(\"Event id -\", id);\r\n                    resolve(h.response({ Message: `Event id - ${id}` }));\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            })\r\n        }\r\n    });\r\n};\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n\r\n    console.log(err);\r\n    process.exit(1);\r\n});\r\n\r\ninit();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575545358381
  },
  "{\"sourceRoot\":\"D:\\\\TestProjects\\\\separatecqrsprojects\\\\read-focus\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\TestProjects\\\\separatecqrsprojects\",\"filename\":\"D:\\\\TestProjects\\\\separatecqrsprojects\\\\read-focus\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\TestProjects\\\\separatecqrsprojects\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\read-focus",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\TestProjects\\separatecqrsprojects",
      "filename": "D:\\TestProjects\\separatecqrsprojects\\read-focus\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\TestProjects\\separatecqrsprojects",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\TestProjects\\separatecqrsprojects\\read-focus\\index.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\TestProjects\\separatecqrsprojects\\read-focus\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\read-focus",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Hapi = require('@hapi/hapi');\n/**\r\n * environment variables\r\n */\n\n\nvar _process$env = process.env,\n    MONGODB_HOST = _process$env.MONGODB_HOST,\n    MONGODB_URL = _process$env.MONGODB_URL,\n    RABBITMQ_HOST = _process$env.RABBITMQ_HOST,\n    RABBITMQ_PORT = _process$env.RABBITMQ_PORT,\n    RABBITMQ_URL = _process$env.RABBITMQ_URL,\n    MESSAGE_STORE_PORT = _process$env.MESSAGE_STORE_PORT,\n    PORT = _process$env.PORT;\n/**\r\n * mongodb connection\r\n */\n\nvar mongoHost = MONGODB_HOST || \"localhost:27017\"; //'127.0.0.1';\n\nvar mongoUrl = MONGODB_URL || \"mongodb://\".concat(mongoHost, \"/messages\"); //const options = { useMongoClient: true };\n\nvar mongoose = require('mongoose');\n\nvar config = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n};\nmongoose.connect(mongoUrl, config);\n/**\r\n * rambbitmq connection\r\n */\n\nvar rabbitHost = RABBITMQ_HOST || '127.0.0.1';\nvar rabbitPort = RABBITMQ_PORT || '5672';\nvar rabbitUrl = RABBITMQ_URL || \"amqp://\".concat(rabbitHost, \":\").concat(rabbitPort);\n\nvar bus = require('servicebus').bus({\n  url: rabbitUrl\n});\n\nvar init = function init() {\n  var server, messageSchema, Message, events;\n  return regeneratorRuntime.async(function init$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          server = Hapi.server({\n            port: 3001,\n            host: 'localhost'\n          });\n          _context.next = 3;\n          return regeneratorRuntime.awrap(server.start());\n\n        case 3:\n          console.log('Read-focus sServer running on %s', server.info.uri);\n          messageSchema = new mongoose.Schema({\n            id: String,\n            message: {\n              content: String\n            }\n          }, {\n            strict: false\n          });\n          Message = mongoose.model('Message', messageSchema);\n          events = {\n            create: 'messages.create'\n          };\n          mongoose.Promise = global.Promise;\n          bus.listen(events.create, function (payload) {\n            var message = new Message(Object.assign({}, payload));\n            var promise = message.save();\n            promise.then(function (document) {\n              console.info('store: saved document');\n              console.info(document);\n            });\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nprocess.on('unhandledRejection', function (err) {\n  console.log(err);\n  process.exit(1);\n});\ninit();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkhhcGkiLCJyZXF1aXJlIiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfSE9TVCIsIk1PTkdPREJfVVJMIiwiUkFCQklUTVFfSE9TVCIsIlJBQkJJVE1RX1BPUlQiLCJSQUJCSVRNUV9VUkwiLCJNRVNTQUdFX1NUT1JFX1BPUlQiLCJQT1JUIiwibW9uZ29Ib3N0IiwibW9uZ29VcmwiLCJtb25nb29zZSIsImNvbmZpZyIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImNvbm5lY3QiLCJyYWJiaXRIb3N0IiwicmFiYml0UG9ydCIsInJhYmJpdFVybCIsImJ1cyIsInVybCIsImluaXQiLCJzZXJ2ZXIiLCJwb3J0IiwiaG9zdCIsInN0YXJ0IiwiY29uc29sZSIsImxvZyIsImluZm8iLCJ1cmkiLCJtZXNzYWdlU2NoZW1hIiwiU2NoZW1hIiwiaWQiLCJTdHJpbmciLCJtZXNzYWdlIiwiY29udGVudCIsInN0cmljdCIsIk1lc3NhZ2UiLCJtb2RlbCIsImV2ZW50cyIsImNyZWF0ZSIsIlByb21pc2UiLCJnbG9iYWwiLCJsaXN0ZW4iLCJwYXlsb2FkIiwiT2JqZWN0IiwiYXNzaWduIiwicHJvbWlzZSIsInNhdmUiLCJ0aGVuIiwiZG9jdW1lbnQiLCJvbiIsImVyciIsImV4aXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBcEI7QUFFQTs7Ozs7bUJBWUlDLE9BQU8sQ0FBQ0MsRztJQVBWQyxZLGdCQUFBQSxZO0lBQ0FDLFcsZ0JBQUFBLFc7SUFDQUMsYSxnQkFBQUEsYTtJQUNBQyxhLGdCQUFBQSxhO0lBQ0FDLFksZ0JBQUFBLFk7SUFDQUMsa0IsZ0JBQUFBLGtCO0lBQ0FDLEksZ0JBQUFBLEk7QUFHRjs7OztBQUdBLElBQU1DLFNBQVMsR0FBR1AsWUFBWSxJQUFJLGlCQUFsQyxDLENBQW9EOztBQUNwRCxJQUFNUSxRQUFRLEdBQUdQLFdBQVcsd0JBQWlCTSxTQUFqQixjQUE1QixDLENBQ0E7O0FBQ0EsSUFBTUUsUUFBUSxHQUFHWixPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNYSxNQUFNLEdBQUc7QUFBRUMsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXdCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE1QyxDQUFmO0FBQ0FILFFBQVEsQ0FBQ0ksT0FBVCxDQUFpQkwsUUFBakIsRUFBMkJFLE1BQTNCO0FBRUE7Ozs7QUFJQSxJQUFNSSxVQUFVLEdBQUdaLGFBQWEsSUFBSSxXQUFwQztBQUNBLElBQU1hLFVBQVUsR0FBR1osYUFBYSxJQUFJLE1BQXBDO0FBQ0EsSUFBTWEsU0FBUyxHQUFHWixZQUFZLHFCQUFjVSxVQUFkLGNBQTRCQyxVQUE1QixDQUE5Qjs7QUFDQSxJQUFNRSxHQUFHLEdBQUdwQixPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCb0IsR0FBdEIsQ0FBMEI7QUFBRUMsRUFBQUEsR0FBRyxFQUFFRjtBQUFQLENBQTFCLENBQVo7O0FBRUEsSUFBTUcsSUFBSSxHQUFHLFNBQVBBLElBQU87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0xDLFVBQUFBLE1BREssR0FDSXhCLElBQUksQ0FBQ3dCLE1BQUwsQ0FBWTtBQUN6QkMsWUFBQUEsSUFBSSxFQUFFLElBRG1CO0FBRXpCQyxZQUFBQSxJQUFJLEVBQUU7QUFGbUIsV0FBWixDQURKO0FBQUE7QUFBQSwwQ0FNTEYsTUFBTSxDQUFDRyxLQUFQLEVBTks7O0FBQUE7QUFPWEMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksa0NBQVosRUFBZ0RMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZQyxHQUE1RDtBQUVNQyxVQUFBQSxhQVRLLEdBU1csSUFBSW5CLFFBQVEsQ0FBQ29CLE1BQWIsQ0FBb0I7QUFDeENDLFlBQUFBLEVBQUUsRUFBRUMsTUFEb0M7QUFFeENDLFlBQUFBLE9BQU8sRUFBRTtBQUNQQyxjQUFBQSxPQUFPLEVBQUVGO0FBREY7QUFGK0IsV0FBcEIsRUFNcEI7QUFDRUcsWUFBQUEsTUFBTSxFQUFFO0FBRFYsV0FOb0IsQ0FUWDtBQW9CTEMsVUFBQUEsT0FwQkssR0FvQksxQixRQUFRLENBQUMyQixLQUFULENBQWUsU0FBZixFQUEwQlIsYUFBMUIsQ0FwQkw7QUFzQkxTLFVBQUFBLE1BdEJLLEdBc0JJO0FBQ2JDLFlBQUFBLE1BQU0sRUFBRTtBQURLLFdBdEJKO0FBMEJYN0IsVUFBQUEsUUFBUSxDQUFDOEIsT0FBVCxHQUFtQkMsTUFBTSxDQUFDRCxPQUExQjtBQUNBdEIsVUFBQUEsR0FBRyxDQUFDd0IsTUFBSixDQUFXSixNQUFNLENBQUNDLE1BQWxCLEVBQTBCLFVBQUFJLE9BQU8sRUFBSTtBQUNuQyxnQkFBTVYsT0FBTyxHQUFHLElBQUlHLE9BQUosQ0FBWVEsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQkYsT0FBbEIsQ0FBWixDQUFoQjtBQUNBLGdCQUFNRyxPQUFPLEdBQUdiLE9BQU8sQ0FBQ2MsSUFBUixFQUFoQjtBQUNBRCxZQUFBQSxPQUFPLENBQUNFLElBQVIsQ0FBYSxVQUFBQyxRQUFRLEVBQUk7QUFDdkJ4QixjQUFBQSxPQUFPLENBQUNFLElBQVIsQ0FBYSx1QkFBYjtBQUNBRixjQUFBQSxPQUFPLENBQUNFLElBQVIsQ0FBYXNCLFFBQWI7QUFDRCxhQUhEO0FBSUQsV0FQRDs7QUEzQlc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBYjs7QUFzQ0FsRCxPQUFPLENBQUNtRCxFQUFSLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0MsR0FBRCxFQUFTO0FBRXhDMUIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl5QixHQUFaO0FBQ0FwRCxFQUFBQSxPQUFPLENBQUNxRCxJQUFSLENBQWEsQ0FBYjtBQUNELENBSkQ7QUFNQWhDLElBQUkiLCJzb3VyY2VSb290IjoiRDpcXFRlc3RQcm9qZWN0c1xcc2VwYXJhdGVjcXJzcHJvamVjdHNcXHJlYWQtZm9jdXMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IEhhcGkgPSByZXF1aXJlKCdAaGFwaS9oYXBpJyk7XHJcblxyXG4vKipcclxuICogZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAqL1xyXG5cclxuY29uc3Qge1xyXG4gIE1PTkdPREJfSE9TVCxcclxuICBNT05HT0RCX1VSTCxcclxuICBSQUJCSVRNUV9IT1NULFxyXG4gIFJBQkJJVE1RX1BPUlQsXHJcbiAgUkFCQklUTVFfVVJMLFxyXG4gIE1FU1NBR0VfU1RPUkVfUE9SVCxcclxuICBQT1JULFxyXG59ID0gcHJvY2Vzcy5lbnY7XHJcblxyXG4vKipcclxuICogbW9uZ29kYiBjb25uZWN0aW9uXHJcbiAqL1xyXG5jb25zdCBtb25nb0hvc3QgPSBNT05HT0RCX0hPU1QgfHwgXCJsb2NhbGhvc3Q6MjcwMTdcIjsvLycxMjcuMC4wLjEnO1xyXG5jb25zdCBtb25nb1VybCA9IE1PTkdPREJfVVJMIHx8IGBtb25nb2RiOi8vJHttb25nb0hvc3R9L21lc3NhZ2VzYDtcclxuLy9jb25zdCBvcHRpb25zID0geyB1c2VNb25nb0NsaWVudDogdHJ1ZSB9O1xyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IGNvbmZpZyA9IHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9XHJcbm1vbmdvb3NlLmNvbm5lY3QobW9uZ29VcmwsIGNvbmZpZyk7XHJcblxyXG4vKipcclxuICogcmFtYmJpdG1xIGNvbm5lY3Rpb25cclxuICovXHJcblxyXG5jb25zdCByYWJiaXRIb3N0ID0gUkFCQklUTVFfSE9TVCB8fCAnMTI3LjAuMC4xJztcclxuY29uc3QgcmFiYml0UG9ydCA9IFJBQkJJVE1RX1BPUlQgfHwgJzU2NzInO1xyXG5jb25zdCByYWJiaXRVcmwgPSBSQUJCSVRNUV9VUkwgfHwgYGFtcXA6Ly8ke3JhYmJpdEhvc3R9OiR7cmFiYml0UG9ydH1gO1xyXG5jb25zdCBidXMgPSByZXF1aXJlKCdzZXJ2aWNlYnVzJykuYnVzKHsgdXJsOiByYWJiaXRVcmwgfSk7XHJcblxyXG5jb25zdCBpbml0ID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IHNlcnZlciA9IEhhcGkuc2VydmVyKHtcclxuICAgIHBvcnQ6IDMwMDEsXHJcbiAgICBob3N0OiAnbG9jYWxob3N0J1xyXG4gIH0pO1xyXG5cclxuICBhd2FpdCBzZXJ2ZXIuc3RhcnQoKTtcclxuICBjb25zb2xlLmxvZygnUmVhZC1mb2N1cyBzU2VydmVyIHJ1bm5pbmcgb24gJXMnLCBzZXJ2ZXIuaW5mby51cmkpO1xyXG5cclxuICBjb25zdCBtZXNzYWdlU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBpZDogU3RyaW5nLFxyXG4gICAgbWVzc2FnZToge1xyXG4gICAgICBjb250ZW50OiBTdHJpbmcsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgICB7XHJcbiAgICAgIHN0cmljdDogZmFsc2UsXHJcbiAgICB9XHJcbiAgKTtcclxuXHJcbiAgY29uc3QgTWVzc2FnZSA9IG1vbmdvb3NlLm1vZGVsKCdNZXNzYWdlJywgbWVzc2FnZVNjaGVtYSk7XHJcblxyXG4gIGNvbnN0IGV2ZW50cyA9IHtcclxuICAgIGNyZWF0ZTogJ21lc3NhZ2VzLmNyZWF0ZScsXHJcbiAgfTtcclxuXHJcbiAgbW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xyXG4gIGJ1cy5saXN0ZW4oZXZlbnRzLmNyZWF0ZSwgcGF5bG9hZCA9PiB7XHJcbiAgICBjb25zdCBtZXNzYWdlID0gbmV3IE1lc3NhZ2UoT2JqZWN0LmFzc2lnbih7fSwgcGF5bG9hZCkpO1xyXG4gICAgY29uc3QgcHJvbWlzZSA9IG1lc3NhZ2Uuc2F2ZSgpO1xyXG4gICAgcHJvbWlzZS50aGVuKGRvY3VtZW50ID0+IHtcclxuICAgICAgY29uc29sZS5pbmZvKCdzdG9yZTogc2F2ZWQgZG9jdW1lbnQnKTtcclxuICAgICAgY29uc29sZS5pbmZvKGRvY3VtZW50KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxufTtcclxuXHJcbnByb2Nlc3Mub24oJ3VuaGFuZGxlZFJlamVjdGlvbicsIChlcnIpID0+IHtcclxuXHJcbiAgY29uc29sZS5sb2coZXJyKTtcclxuICBwcm9jZXNzLmV4aXQoMSk7XHJcbn0pO1xyXG5cclxuaW5pdCgpO1xyXG5cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Hapi",
        "require",
        "process",
        "env",
        "MONGODB_HOST",
        "MONGODB_URL",
        "RABBITMQ_HOST",
        "RABBITMQ_PORT",
        "RABBITMQ_URL",
        "MESSAGE_STORE_PORT",
        "PORT",
        "mongoHost",
        "mongoUrl",
        "mongoose",
        "config",
        "useNewUrlParser",
        "useUnifiedTopology",
        "connect",
        "rabbitHost",
        "rabbitPort",
        "rabbitUrl",
        "bus",
        "url",
        "init",
        "server",
        "port",
        "host",
        "start",
        "console",
        "log",
        "info",
        "uri",
        "messageSchema",
        "Schema",
        "id",
        "String",
        "message",
        "content",
        "strict",
        "Message",
        "model",
        "events",
        "create",
        "Promise",
        "global",
        "listen",
        "payload",
        "Object",
        "assign",
        "promise",
        "save",
        "then",
        "document",
        "on",
        "err",
        "exit"
      ],
      "mappings": "AAAA;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;AAEA;;;;;mBAYIC,OAAO,CAACC,G;IAPVC,Y,gBAAAA,Y;IACAC,W,gBAAAA,W;IACAC,a,gBAAAA,a;IACAC,a,gBAAAA,a;IACAC,Y,gBAAAA,Y;IACAC,kB,gBAAAA,kB;IACAC,I,gBAAAA,I;AAGF;;;;AAGA,IAAMC,SAAS,GAAGP,YAAY,IAAI,iBAAlC,C,CAAoD;;AACpD,IAAMQ,QAAQ,GAAGP,WAAW,wBAAiBM,SAAjB,cAA5B,C,CACA;;AACA,IAAME,QAAQ,GAAGZ,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMa,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAwBC,EAAAA,kBAAkB,EAAE;AAA5C,CAAf;AACAH,QAAQ,CAACI,OAAT,CAAiBL,QAAjB,EAA2BE,MAA3B;AAEA;;;;AAIA,IAAMI,UAAU,GAAGZ,aAAa,IAAI,WAApC;AACA,IAAMa,UAAU,GAAGZ,aAAa,IAAI,MAApC;AACA,IAAMa,SAAS,GAAGZ,YAAY,qBAAcU,UAAd,cAA4BC,UAA5B,CAA9B;;AACA,IAAME,GAAG,GAAGpB,OAAO,CAAC,YAAD,CAAP,CAAsBoB,GAAtB,CAA0B;AAAEC,EAAAA,GAAG,EAAEF;AAAP,CAA1B,CAAZ;;AAEA,IAAMG,IAAI,GAAG,SAAPA,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,UAAAA,MADK,GACIxB,IAAI,CAACwB,MAAL,CAAY;AACzBC,YAAAA,IAAI,EAAE,IADmB;AAEzBC,YAAAA,IAAI,EAAE;AAFmB,WAAZ,CADJ;AAAA;AAAA,0CAMLF,MAAM,CAACG,KAAP,EANK;;AAAA;AAOXC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDL,MAAM,CAACM,IAAP,CAAYC,GAA5D;AAEMC,UAAAA,aATK,GASW,IAAInB,QAAQ,CAACoB,MAAb,CAAoB;AACxCC,YAAAA,EAAE,EAAEC,MADoC;AAExCC,YAAAA,OAAO,EAAE;AACPC,cAAAA,OAAO,EAAEF;AADF;AAF+B,WAApB,EAMpB;AACEG,YAAAA,MAAM,EAAE;AADV,WANoB,CATX;AAoBLC,UAAAA,OApBK,GAoBK1B,QAAQ,CAAC2B,KAAT,CAAe,SAAf,EAA0BR,aAA1B,CApBL;AAsBLS,UAAAA,MAtBK,GAsBI;AACbC,YAAAA,MAAM,EAAE;AADK,WAtBJ;AA0BX7B,UAAAA,QAAQ,CAAC8B,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACAtB,UAAAA,GAAG,CAACwB,MAAJ,CAAWJ,MAAM,CAACC,MAAlB,EAA0B,UAAAI,OAAO,EAAI;AACnC,gBAAMV,OAAO,GAAG,IAAIG,OAAJ,CAAYQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,CAAZ,CAAhB;AACA,gBAAMG,OAAO,GAAGb,OAAO,CAACc,IAAR,EAAhB;AACAD,YAAAA,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ,EAAI;AACvBxB,cAAAA,OAAO,CAACE,IAAR,CAAa,uBAAb;AACAF,cAAAA,OAAO,CAACE,IAAR,CAAasB,QAAb;AACD,aAHD;AAID,WAPD;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAsCAlD,OAAO,CAACmD,EAAR,CAAW,oBAAX,EAAiC,UAACC,GAAD,EAAS;AAExC1B,EAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACApD,EAAAA,OAAO,CAACqD,IAAR,CAAa,CAAb;AACD,CAJD;AAMAhC,IAAI",
      "sourceRoot": "D:\\TestProjects\\separatecqrsprojects\\read-focus",
      "sourcesContent": [
        "'use strict';\r\nconst Hapi = require('@hapi/hapi');\r\n\r\n/**\r\n * environment variables\r\n */\r\n\r\nconst {\r\n  MONGODB_HOST,\r\n  MONGODB_URL,\r\n  RABBITMQ_HOST,\r\n  RABBITMQ_PORT,\r\n  RABBITMQ_URL,\r\n  MESSAGE_STORE_PORT,\r\n  PORT,\r\n} = process.env;\r\n\r\n/**\r\n * mongodb connection\r\n */\r\nconst mongoHost = MONGODB_HOST || \"localhost:27017\";//'127.0.0.1';\r\nconst mongoUrl = MONGODB_URL || `mongodb://${mongoHost}/messages`;\r\n//const options = { useMongoClient: true };\r\nconst mongoose = require('mongoose');\r\nconst config = { useNewUrlParser: true,useUnifiedTopology: true }\r\nmongoose.connect(mongoUrl, config);\r\n\r\n/**\r\n * rambbitmq connection\r\n */\r\n\r\nconst rabbitHost = RABBITMQ_HOST || '127.0.0.1';\r\nconst rabbitPort = RABBITMQ_PORT || '5672';\r\nconst rabbitUrl = RABBITMQ_URL || `amqp://${rabbitHost}:${rabbitPort}`;\r\nconst bus = require('servicebus').bus({ url: rabbitUrl });\r\n\r\nconst init = async () => {\r\n  const server = Hapi.server({\r\n    port: 3001,\r\n    host: 'localhost'\r\n  });\r\n\r\n  await server.start();\r\n  console.log('Read-focus sServer running on %s', server.info.uri);\r\n\r\n  const messageSchema = new mongoose.Schema({\r\n    id: String,\r\n    message: {\r\n      content: String,\r\n    },\r\n  },\r\n    {\r\n      strict: false,\r\n    }\r\n  );\r\n\r\n  const Message = mongoose.model('Message', messageSchema);\r\n\r\n  const events = {\r\n    create: 'messages.create',\r\n  };\r\n\r\n  mongoose.Promise = global.Promise;\r\n  bus.listen(events.create, payload => {\r\n    const message = new Message(Object.assign({}, payload));\r\n    const promise = message.save();\r\n    promise.then(document => {\r\n      console.info('store: saved document');\r\n      console.info(document);\r\n    });\r\n  });\r\n\r\n};\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n\r\n  console.log(err);\r\n  process.exit(1);\r\n});\r\n\r\ninit();\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575547731998
  }
}